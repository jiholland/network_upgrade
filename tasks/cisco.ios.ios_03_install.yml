---
# tasks file for network_upgrade

- name: install ios
  block:

    - name: set boot variable
      cisco.ios.ios_config:
        lines:
          - boot system flash:{{ compliant_os_file }}
        save_when: always

    - name: install compliant os and reboot
      cisco.ios.ios_command:
        commands:
          - command: reload reason Upgrade {{ ansible_facts.net_system }} to {{ compliant_os_version }}
            prompt: Proceed with reload
            answer: "\r"
      register: installed

    - name: print information about the next task
      ansible.builtin.debug:
        msg:
          - "next task: wait for device to reboot"
          - "timeout is 1800 seconds"
      run_once: true

    - name: wait for device to reboot
      ansible.builtin.wait_for_connection:
        delay: 60
        timeout: 1800

  when:
    - ansible_facts.net_iostype == 'IOS'
    - ansible_facts.net_version != compliant_os_version


- name: install iosxe
  block:

    - name: set boot variable and enable auto-boot
      cisco.ios.ios_config:
        lines:
          - no boot system all
          - boot system flash:packages.conf
          - no boot manual
        save_when: always

    - name: print information about the next task
      ansible.builtin.debug:
        msg:
          - "next task: install compliant os and reboot"
          - "timeout is 3600 seconds"
      run_once: true

    - name: install compliant os and reboot
      cisco.ios.ios_command:
        commands:
          - install add file flash:{{ compliant_os_file }} activate commit prompt-level none
      vars:
        ansible_command_timeout: 3600
      register: installed

  rescue:

    - name: reset the connection
      ansible.builtin.meta: reset_connection

  always:

    - name: print information about the next task
      ansible.builtin.debug:
        msg:
          - "next task: wait for device to reboot"
          - "timeout is 600 seconds"
      run_once: true

    - name: wait for device to reboot
      ansible.builtin.wait_for_connection:
        delay: 90
        timeout: 600

  when:
    - ansible_facts.net_iostype == 'IOS-XE'
    - ansible_facts.net_version != compliant_os_version


- name: assert installation
  block:

    - name: gather facts
      cisco.ios.ios_facts:
        gather_subset: min
      until: not result.failed
      retries: 5
      delay: 10
      register: result

    - name: assert that the running os version is correct
      ansible.builtin.assert:
        that: ansible_facts.net_version == compliant_os_version
        fail_msg: Running {{ ansible_facts.net_system }} does not match compliant version. Upgrade unsuccessful :-(
        success_msg: Running {{ ansible_facts.net_system }} match compliant version :-)

  when: installed is defined
